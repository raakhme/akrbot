/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/packs/{id}": {
    get: operations["getOneBasePacksControllerPackDto"];
    put: operations["replaceOneBasePacksControllerPackDto"];
    delete: operations["deleteOneBasePacksControllerPackDto"];
    patch: operations["updateOneBasePacksControllerPackDto"];
  };
  "/api/packs": {
    get: operations["getManyBasePacksControllerPackDto"];
    post: operations["createOneBasePacksControllerPackDto"];
  };
  "/api/packs/bulk": {
    post: operations["createManyBasePacksControllerPackDto"];
  };
  "/api/artists/{id}": {
    get: operations["getOneBaseArtistsControllerArtistDto"];
    put: operations["replaceOneBaseArtistsControllerArtistDto"];
    delete: operations["deleteOneBaseArtistsControllerArtistDto"];
    patch: operations["updateOneBaseArtistsControllerArtistDto"];
  };
  "/api/artists": {
    get: operations["getManyBaseArtistsControllerArtistDto"];
    post: operations["createOneBaseArtistsControllerArtistDto"];
  };
  "/api/artists/bulk": {
    post: operations["createManyBaseArtistsControllerArtistDto"];
  };
}

export interface components {
  schemas: {
    GetManyPackDtoResponseDto: {
      data: components["schemas"]["PackDto"][];
      count: number;
      total: number;
      page: number;
      pageCount: number;
    };
    PackDto: {
      /** @description Уникальный идентификатор */
      id?: string;
      /**
       * Format: date-time
       * @description Дата и время создания
       */
      createDateTime?: string;
      /**
       * Format: date-time
       * @description Дата и время изменения
       */
      lastChangedDateTime?: string;
      loopmastersUrl: string;
      name: string;
      description: string;
      /**
       * @description Используется для отдельного пути пака в адресной строке
       *       и является ссылкой для поисковых робов на пак
       */
      alias?: string;
    };
    CreatePackDto: {
      loopmastersUrl: string;
      name: string;
      description: string;
      /**
       * @description Используется для отдельного пути пака в адресной строке
       *       и является ссылкой для поисковых робов на пак
       */
      alias?: string;
    };
    CreateManyPackDtoDto: {
      bulk: components["schemas"]["CreatePackDto"][];
    };
    UpdatePackDto: {
      loopmastersUrl: string;
      name: string;
      description: string;
      /**
       * @description Используется для отдельного пути пака в адресной строке
       *       и является ссылкой для поисковых робов на пак
       */
      alias?: string;
      /** @description Идентификатор сущности */
      id: string;
    };
    GetManyArtistDtoResponseDto: {
      data: components["schemas"]["ArtistDto"][];
      count: number;
      total: number;
      page: number;
      pageCount: number;
    };
    ArtistDto: {
      /** @description Уникальный идентификатор */
      id?: string;
      /**
       * Format: date-time
       * @description Дата и время создания
       */
      createDateTime?: string;
      /**
       * Format: date-time
       * @description Дата и время изменения
       */
      lastChangedDateTime?: string;
      name: string;
      fullname: string;
      description: string;
    };
    CreateArtistDto: {
      name: string;
      fullname: string;
      description: string;
    };
    CreateManyArtistDtoDto: {
      bulk: components["schemas"]["CreateArtistDto"][];
    };
    UpdateArtistDto: {
      name: string;
      fullname: string;
      description: string;
      /** @description Идентификатор сущности */
      id: string;
    };
  };
}

export interface operations {
  getOneBasePacksControllerPackDto: {
    parameters: {
      path: {
        id: string;
      };
      query: {
        /** Selects resource fields. <a href="https://github.com/nestjsx/crud/wiki/Requests#select" target="_blank">Docs</a> */
        fields?: string[];
        /** Adds relational resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#join" target="_blank">Docs</a> */
        join?: string[];
        /** Reset cache (if was enabled). <a href="https://github.com/nestjsx/crud/wiki/Requests#cache" target="_blank">Docs</a> */
        cache?: number;
      };
    };
    responses: {
      /** Get one base response */
      200: {
        content: {
          "application/json": components["schemas"]["PackDto"];
        };
      };
    };
  };
  replaceOneBasePacksControllerPackDto: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Response */
      200: {
        content: {
          "application/json": components["schemas"]["PackDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePackDto"];
      };
    };
  };
  deleteOneBasePacksControllerPackDto: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Delete one base response */
      200: unknown;
    };
  };
  updateOneBasePacksControllerPackDto: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Response */
      200: {
        content: {
          "application/json": components["schemas"]["PackDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePackDto"];
      };
    };
  };
  getManyBasePacksControllerPackDto: {
    parameters: {
      query: {
        /** Selects resource fields. <a href="https://github.com/nestjsx/crud/wiki/Requests#select" target="_blank">Docs</a> */
        fields?: string[];
        /** Adds search condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#search" target="_blank">Docs</a> */
        s?: string;
        /** Adds filter condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#filter" target="_blank">Docs</a> */
        filter?: string[];
        /** Adds OR condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#or" target="_blank">Docs</a> */
        or?: string[];
        /** Adds sort by field. <a href="https://github.com/nestjsx/crud/wiki/Requests#sort" target="_blank">Docs</a> */
        sort?: string[];
        /** Adds relational resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#join" target="_blank">Docs</a> */
        join?: string[];
        /** Limit amount of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#limit" target="_blank">Docs</a> */
        limit?: number;
        /** Offset amount of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#offset" target="_blank">Docs</a> */
        offset?: number;
        /** Page portion of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#page" target="_blank">Docs</a> */
        page?: number;
        /** Reset cache (if was enabled). <a href="https://github.com/nestjsx/crud/wiki/Requests#cache" target="_blank">Docs</a> */
        cache?: number;
      };
    };
    responses: {
      /** Get many base response */
      200: {
        content: {
          "application/json":
            | components["schemas"]["GetManyPackDtoResponseDto"]
            | components["schemas"]["PackDto"][];
        };
      };
    };
  };
  createOneBasePacksControllerPackDto: {
    parameters: {};
    responses: {
      /** Get create one base response */
      201: {
        content: {
          "application/json": components["schemas"]["PackDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePackDto"];
      };
    };
  };
  createManyBasePacksControllerPackDto: {
    parameters: {};
    responses: {
      /** Get create many base response */
      201: {
        content: {
          "application/json": components["schemas"]["PackDto"][];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateManyPackDtoDto"];
      };
    };
  };
  getOneBaseArtistsControllerArtistDto: {
    parameters: {
      path: {
        id: string;
      };
      query: {
        /** Selects resource fields. <a href="https://github.com/nestjsx/crud/wiki/Requests#select" target="_blank">Docs</a> */
        fields?: string[];
        /** Adds relational resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#join" target="_blank">Docs</a> */
        join?: string[];
        /** Reset cache (if was enabled). <a href="https://github.com/nestjsx/crud/wiki/Requests#cache" target="_blank">Docs</a> */
        cache?: number;
      };
    };
    responses: {
      /** Get one base response */
      200: {
        content: {
          "application/json": components["schemas"]["ArtistDto"];
        };
      };
    };
  };
  replaceOneBaseArtistsControllerArtistDto: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Response */
      200: {
        content: {
          "application/json": components["schemas"]["ArtistDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateArtistDto"];
      };
    };
  };
  deleteOneBaseArtistsControllerArtistDto: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Delete one base response */
      200: unknown;
    };
  };
  updateOneBaseArtistsControllerArtistDto: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Response */
      200: {
        content: {
          "application/json": components["schemas"]["ArtistDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateArtistDto"];
      };
    };
  };
  getManyBaseArtistsControllerArtistDto: {
    parameters: {
      query: {
        /** Selects resource fields. <a href="https://github.com/nestjsx/crud/wiki/Requests#select" target="_blank">Docs</a> */
        fields?: string[];
        /** Adds search condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#search" target="_blank">Docs</a> */
        s?: string;
        /** Adds filter condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#filter" target="_blank">Docs</a> */
        filter?: string[];
        /** Adds OR condition. <a href="https://github.com/nestjsx/crud/wiki/Requests#or" target="_blank">Docs</a> */
        or?: string[];
        /** Adds sort by field. <a href="https://github.com/nestjsx/crud/wiki/Requests#sort" target="_blank">Docs</a> */
        sort?: string[];
        /** Adds relational resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#join" target="_blank">Docs</a> */
        join?: string[];
        /** Limit amount of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#limit" target="_blank">Docs</a> */
        limit?: number;
        /** Offset amount of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#offset" target="_blank">Docs</a> */
        offset?: number;
        /** Page portion of resources. <a href="https://github.com/nestjsx/crud/wiki/Requests#page" target="_blank">Docs</a> */
        page?: number;
        /** Reset cache (if was enabled). <a href="https://github.com/nestjsx/crud/wiki/Requests#cache" target="_blank">Docs</a> */
        cache?: number;
      };
    };
    responses: {
      /** Get many base response */
      200: {
        content: {
          "application/json":
            | components["schemas"]["GetManyArtistDtoResponseDto"]
            | components["schemas"]["ArtistDto"][];
        };
      };
    };
  };
  createOneBaseArtistsControllerArtistDto: {
    parameters: {};
    responses: {
      /** Get create one base response */
      201: {
        content: {
          "application/json": components["schemas"]["ArtistDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateArtistDto"];
      };
    };
  };
  createManyBaseArtistsControllerArtistDto: {
    parameters: {};
    responses: {
      /** Get create many base response */
      201: {
        content: {
          "application/json": components["schemas"]["ArtistDto"][];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateManyArtistDtoDto"];
      };
    };
  };
}

export interface external {}
